@{
    ViewData["Title"] = "User Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <style>
        .card {
            height: auto;
            background: white; /* Change the background to white */
            color: black; /* Change text color to black */
            border-radius: 12px;
            box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.123);
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: flex-start;
            transition-duration: .5s;
        }

        .profileImage {
            background: linear-gradient(to right, rgb(54, 54, 54), rgb(32, 32, 32));
            margin-top: 20px;
            margin-left: 20px;
            margin-bottom: 20px;
            width: 170px;
            height: 170px;
            border-radius: 50%;
            box-shadow: 5px 10px 20px rgba(0, 0, 0, 0.329);
        }

        .userDetails {
            width: 50%;
            text-align: left;
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: left;
        }

        .edit-button {
            font-weight: bold; /* Make the text bold */
            cursor: pointer; /* Change the cursor to a pointer to indicate it's clickable */
            color: #4F46E5; /* Change the color to blue (you can choose a different color) */
            text-align: right;
        }

            .edit-button:hover {
                text-decoration: none; /* Remove the underline on hover */
            }

        .name {
            font-size: 1.5em;
            font-weight: 700;
            color: black; /* Change text color to black */
            letter-spacing: 0.5px;
        }

        .email {
            font-size: 0.84em;
            color: black;
            letter-spacing: 0.2px;
            margin-bottom: 5px;
        }

        .phoneNo {
            font-size: 0.84em;
            color: black;
            letter-spacing: 0.2px;
            margin-bottom: 5px;
        }

        .profile-card {
            width: 100%;
            margin-bottom: 10px;
            flex-direction: row;
        }

        .transferCard {
            display: flex;
            flex-direction: column;
        }

        .accountCard {
            width: 75%;
            background: white; /* Change the background to white */
            color: black; /* Change text color to black */
            margin-left: 10px;
            margin-bottom: 10px;
        }

        .accountInfo {
            text-align: left;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .accountDetailsTitle {
            font-size: 1.5rem;
            font-weight: 700;
            color: black; /* Change text color to black */
            letter-spacing: 0.5px;
        }

        .accountTitle {
            font-size: 1em;
            font-weight: 600;
            color: black; /* Change text color to black */
            letter-spacing: 0.5px;
            margin-bottom: 2px;
            margin-left: 10px;
        }

        .accountText {
            font-size: 0.85em;
            color: black;
            letter-spacing: 0.2px;
            margin-bottom: 5px;
            margin-left: 10px;
        }

        .card-container {
            display: flex;
            flex-direction: row;
        }

        .transferMoney {
            width: 100%;
            text-align: left;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .transferTitle {
            font-size: 1.5rem;
            font-weight: 700;
            color: black; /* Change text color to black */
            letter-spacing: 0.5px;
        }

        .formField {
            font-size: 0.84em;
            color: black;
            letter-spacing: 0.2px;
            margin-bottom: 10px;
        }

        .sendButton {
            background-color: #4F46E5;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
        }

            .sendButton:hover {
                background-color: #655de8;
            }

        .clearfix::after {
            content: "";
            clear: both;
            display: table;
        }

        .transferCard {
            display: flex;
            flex-direction: column;
            width: 25%;
        }

        .transactionCard {
            width: 75%;
            background: white; /* Change the background to white */
            color: black; /* Change text color to black */
            border-radius: 12px;
            box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.123);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            transition-duration: .5s;
            margin-left: 10px;
        }

        .transactionDetails {
            width: 100%;
            text-align: left;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: left;
            justify-content: left;
        }

        .transactionTitle {
            font-size: 1.5em;
            font-weight: 700;
            color: black; /* Change text color to black */
            letter-spacing: 0.5px;
            border-bottom: 1px solid black; /* Add a thin line under the title */
            padding-bottom: 10px; /* Adjust padding as needed */
            margin-bottom: 10px; /* Adjust margin as needed */
        }

        .transactionTable {
            width: 100%;
            border-collapse: collapse;
        }

            .transactionTable th, .transactionTable td {
                border: 1px solid transparent; /* Set border color to transparent */
                padding: 8px;
                text-align: left;
                color: black;
            }

            .transactionTable th {
                background: white;
                font-weight: 700;
                letter-spacing: 0.5px;
            }

            .transactionTable tr:nth-child(even) {
                background: white;
            }

            .transactionTable tr:nth-child(odd) {
                background: white;
            }


        .logoutButton {
            position: absolute;
            top: 10px;
            right: 10px;
        }

            .logoutButton button {
                background-color: #4F46E5;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                cursor: pointer;
            }

                .logoutButton button:hover {
                    background-color: #655de8;
                }

    </style>


</head>
<body>
    <div class="card-container">
        <div class="card-container">
            <div class="profile-card card">
                <div class="profileImage">
                    <svg viewBox="0 0 128 128"><circle r="60" fill="transparent" cy="64" cx="64"></circle><circle r="48" fill="transparent" cy="64" cx="64"></circle><path fill="#191919" d="m64 14a32 32 0 0 1 32 32v41a6 6 0 0 1 -6 6h-52a6 6 0 0 1 -6-6v-41a32 32 0 0 1 32-32z"></path><path opacity="1" fill="#191919" d="m62.73 22h2.54a23.73 23.73 0 0 1 23.73 23.73v42.82a4.45 4.45 0 0 1 -4.45 4.45h-41.1a4.45 4.45 0 0 1 -4.45-4.45v-42.82a23.73 23.73 0 0 1 23.73-23.73z"></path><circle r="7" fill="#fbc0aa" cy="65" cx="89"></circle><path fill="#4bc190" d="m64 124a59.67 59.67 0 0 0 34.69-11.06l-3.32-9.3a10 10 0 0 0 -9.37-6.64h-43.95a10 10 0 0 0 -9.42 6.64l-3.32 9.3a59.67 59.67 0 0 0 34.69 11.06z"></path><path opacity=".3" fill="#356cb6" d="m45 110 5.55 2.92-2.55 8.92a60.14 60.14 0 0 0 9 1.74v-27.08l-12.38 10.25a2 2 0 0 0 .38 3.25z"></path><path opacity=".3" fill="#356cb6" d="m71 96.5v27.09a60.14 60.14 0 0 0 9-1.74l-2.54-8.93 5.54-2.92a2 2 0 0 0 .41-3.25z"></path><path fill="#fff" d="m57 123.68a58.54 58.54 0 0 0 14 0v-25.68h-14z"></path><path stroke-width="14" stroke-linejoin="round" stroke-linecap="round" stroke="#fbc0aa" fill="none" d="m64 88.75v9.75"></path><circle r="7" fill="#fbc0aa" cy="65" cx="39"></circle><path fill="#ffd8ca" d="m64 91a25 25 0 0 1 -25-25v-16.48a25 25 0 1 1 50 0v16.48a25 25 0 0 1 -25 25z"></path><path fill="#191919" d="m91.49 51.12v-4.72c0-14.95-11.71-27.61-26.66-28a27.51 27.51 0 0 0 -28.32 27.42v5.33a2 2 0 0 0 2 2h6.81a8 8 0 0 0 6.5-3.33l4.94-6.88a18.45 18.45 0 0 1 1.37 1.63 22.84 22.84 0 0 0 17.87 8.58h13.45a2 2 0 0 0 2.04-2.03z"></path><path style="fill:none;stroke-linecap:round;stroke:#fff;stroke-miterlimit:10;stroke-width:2;opacity:.1" d="m62.76 36.94c4.24 8.74 10.71 10.21 16.09 10.21h5"></path><path style="fill:none;stroke-linecap:round;stroke:#fff;stroke-miterlimit:10;stroke-width:2;opacity:.1" d="m71 35c2.52 5.22 6.39 6.09 9.6 6.09h3"></path><circle r="3" fill="#515570" cy="62.28" cx="76"></circle><circle r="3" fill="#515570" cy="62.28" cx="52"></circle><ellipse ry="2.98" rx="4.58" opacity=".1" fill="#f85565" cy="69.67" cx="50.42"></ellipse><ellipse ry="2.98" rx="4.58" opacity=".1" fill="#f85565" cy="69.67" cx="77.58"></ellipse><g stroke-linejoin="round" stroke-linecap="round" fill="none"><path stroke-width="4" stroke="#fbc0aa" d="m64 67v4"></path><path stroke-width="2" stroke="#515570" opacity=".2" d="m55 56h-9.25"></path><path stroke-width="2" stroke="#515570" opacity=".2" d="m82 56h-9.25"></path></g><path opacity=".4" fill="#f85565" d="m64 84c5 0 7-3 7-3h-14s2 3 7 3z"></path><path fill="#f85565" d="m65.07 78.93-.55.55a.73.73 0 0 1 -1 0l-.55-.55c-1.14-1.14-2.93-.93-4.27.47l-1.7 1.6h14l-1.66-1.6c-1.34-1.4-3.13-1.61-4.27-.47z"></path></svg>
                </div>
                <div class="userDetails">
                    <p class="edit-button" onclick="showEditCard()">Edit Details</p>

                    <p class="name" id="name">Pepper Potts</p>
                    <p class="email" id="email">pepper@pots.com</p>
                    <p class="phoneNo" id="phone">0777171717</p>
                </div>
            </div>
        </div>
        <div class="accountCard card">
            <div class="accountInfo">
                <p class="accountDetailsTitle">Account Details</p>
                <div class="account-details">
                    <div class="account-detail">
                        <p class="accountTitle">Account Number</p>
                        <p class="accountText" id="accountNumber">0000000000</p>
                    </div>
                    <div class="account-detail">
                        <p class="accountTitle">Current Balance</p>
                        <p class="accountText" id="accountBalance">$ 0</p>
                    </div>
                </div>
                <div class="logoutButton">
                    <button onclick="logout()">Logout</button>
                </div>
            </div>
        </div>
    </div>


    <div class="card-container">
        <div class="transferCard card">
            <div class="transferMoney">
                <p class="transferTitle">Transfer Money</p>
                <p class="formField">Account Number</p>
                <input type="text" id="accountNumber" class="formField">
                <p class="formField">Amount</p>
                <input type="text" id="amount" class="formField">
                <p class="formField">Description</p>
                <textarea id="description" class="formField"></textarea>
                <button class="sendButton">Send</button>
            </div>
        </div>
        <div class="transactionCard card">
            <div class="transactionDetails">
                <p class="transactionTitle">Transaction History</p>

                <table class="transactionTable" id="transactions">
                    <tr>
                        <th>Transaction Date</th>
                        <th>Description</th>
                        <th>Amount</th>

                    </tr>
                    <tr>
                        <td>2023-10-13</td>
                        <td>Payment for services</td>
                        <td>$100.00</td>

                    </tr>
                    <!-- Add more rows for additional transactions as needed -->
                </table>

            </div>
        </div>
    </div>

    <script>
        function logout() {

            window.location.href = "/Account/Login"; // Replace with the actual URL of your login page.
        }

        document.addEventListener("DOMContentLoaded", function () {

            var cookieData = document.cookie
                .split('; ')
                .find((row) => row.startsWith("user="))
                .split('=')[1];

            if (cookieData) {
                var jsonData = JSON.parse(cookieData);


                fetchAccountDetails(jsonData.email);



                console.log(jsonData);
            }
        });

        function fetchAccountDetails(email) {

            fetch("http://localhost:5237/bankApi/getUser?email=" + email)
                .then(async response => {
                    if (response.ok) {
                        const jsondata = await response.json();
                        console.log(jsondata);
                        document.getElementById("name").textContent = jsondata.name;
                        document.getElementById("email").textContent = jsondata.email;
                        document.getElementById("phone").textContent = jsondata.phone;
                        document.getElementById("accountNumber").textContent = jsondata.accounts[0].accountNo;
                        document.getElementById("accountBalance").textContent = jsondata.accounts[0].balance;
                        var transactionTable = [{
                            "transactionId": 1,
                            "type": 0,
                            "amount": 500,
                            "dateTime": "2023-10-13T00:00:00",
                            "description": null,
                            "accountId": 1
                        }];
                        transactionTable.unshift(<tr>
                            <th>Transaction Date < /th>
                            < th > Description < /th>
                            < th > Amount < /th>

                        < /tr>)
                        document.getElementById("transactions").innerHTML = transactionTable.map(transaction => {
                            return `<tr>
                                <td>${transaction.dateTime}</td>
                                <td>${transaction.description}</td>
                                <td>${transaction.amount}</td>
                                </tr>`;
                        }).join('');
                    }
                    else {
                        alert("Invalid Account Number");
                    }
                })
                .catch(error => {
                    console.log(error);
                });
        }



    </script>

</body>
</html>